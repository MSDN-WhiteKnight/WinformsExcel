<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WinFormsExcel</name>
    </assembly>
    <members>
        <member name="T:ExtraControls.AdvancedDataGrid">
            <summary>
            Provides the functionality of hosting MS Excel window in Windows Forms application in order to display and edit
            one or several tables of data
            </summary>
        </member>
        <member name="F:ExtraControls.AdvancedDataGrid._Xl">
            <summary>
            Underlying Excel appplication of this control instance
            </summary>
        </member>
        <member name="F:ExtraControls.AdvancedDataGrid._Initialized">
            <summary>
            Indicates that excel was loaded for this control instance
            </summary>
        </member>
        <member name="F:ExtraControls.AdvancedDataGrid.display_formula_bar">
            <summary>
            Indicates that formula bar should be displayed
            </summary>
        </member>
        <member name="F:ExtraControls.AdvancedDataGrid.display_status_bar">
            <summary>
            Indicates that status bar should be displayed
            </summary>
        </member>
        <member name="F:ExtraControls.AdvancedDataGrid.display_window_title">
            <summary>
            Indicates that window title should be displayed
            </summary>
        </member>
        <member name="F:ExtraControls.AdvancedDataGrid.disabled">
            <summary>
            Indicates that the user input is disabled for this control
            </summary>
        </member>
        <member name="P:ExtraControls.AdvancedDataGrid.Inactive">
            <summary>
            Specifies that the use input is disabled for this control
            </summary>
        </member>
        <member name="P:ExtraControls.AdvancedDataGrid.DataSource">
            <summary>
            Gets or sets the content of currently active Excel sheet via DataTable object        
            </summary>
            <remarks>
            NOTE: AdvancedDataGrid does not support data binding. 
            The DataSource Property is only a convenient way to manipulate active sheet’s contents.
            </remarks>
        </member>
        <member name="P:ExtraControls.AdvancedDataGrid.DisplayStatusBar">
            <summary>
            Enables the standard Excel status bar below worksheet area
            </summary>
        </member>
        <member name="P:ExtraControls.AdvancedDataGrid.DisplayFormulaBar">
            <summary>
            Enables the standard Excel formula bar above worksheet area
            </summary>
        </member>
        <member name="P:ExtraControls.AdvancedDataGrid.DisplayWindowTitle">
            <summary>
            Enables Excel window title, including the ribbon menu in new versions
            </summary>
        </member>
        <member name="P:ExtraControls.AdvancedDataGrid.ActiveSheet">
            <summary>
            Gets or sets current active sheet.                
            </summary>
        </member>
        <member name="P:ExtraControls.AdvancedDataGrid.XlApplication">
            <summary>
            Gets the underlying Excel Application object of this control instance (read-only)
            </summary>
        </member>
        <member name="P:ExtraControls.AdvancedDataGrid.SheetsCount">
            <summary>
            Gets the count of sheets in an active workbook
            </summary>
        </member>
        <member name="P:ExtraControls.AdvancedDataGrid.InitialSheetsCount">
            <summary>
            Specifies the initial count of sheets for this control
            </summary>
        </member>
        <member name="P:ExtraControls.AdvancedDataGrid.SourceFile">
            <summary>
            Specifies the workbook file to open when initializing this control
            </summary>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.#ctor">
            <summary>
            Creates AdvacedDataGrid control in uninitialized state
            </summary>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.InitializeExcel">
            <summary>
            Initializes Excel application and creates empty workbook for this control instance
            </summary>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.Destroy">
            <summary>
            Cleans up resources of current AdvancedDataGrid control, breaking cross-process window relationships
            and closing Excel application. The control will be in uninitialized state.
            </summary>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.Finalize">
            <summary>
            Destroys this control instance
            </summary>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.AdvancedDataGrid_Resize(System.Object,System.EventArgs)">
            <summary>
            Adjusts Excel window size to fit AdvancedDataGrid control's new size
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.SetCellContent(System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>
            Sets contents of the cell specified by sheet, row and column numbers into an object of any type
            
            Throws:
            InvalidOperationException (Excel is not initialized)
            ArgumentException (sheet number is incorrect);
            </summary>
            <param name="sheet">Sheet number</param>
            <param name="row">Row number</param>
            <param name="col">Column number</param>
            <param name="val">New cell value</param>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.GetCellContent(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the content of the cell specified by sheet, row and column numbers.
            Returns null in case of incorrect arguments.
            </summary>
            <param name="sheet">Sheet number</param>
            <param name="row">Row number</param>
            <param name="col">Column number</param>
            <returns>Value of the specified cell</returns>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.GetCellAddress(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the address of the specified cell
            </summary>
            <param name="sheet">Sheet number (1-based)</param>
            <param name="row">Cell row number (1-based)</param>
            <param name="col">Cell column number (1-based)</param>        
            <remarks>
            The address consists of column represented by letter, and row represented by number 
            (such as "B12" for 2nd column 12th row).
            </remarks>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.SetSheetContent(System.Int32,System.Data.DataTable)">
            <summary>
            Fills the specified sheet with a content of given DataTable object
            </summary>
            <param name="sheet">Sheet number</param>
            <param name="t">DataTable to fill sheet's content</param>
            <exception cref="T:System.InvalidOperationException">Excel is not initialized</exception>
            <exception cref="T:System.ArgumentException">Sheet number is incorrect</exception>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.GetSheetContent(System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Loads content of specified sheet as DataTable object. 
            Tries to guess column types based on first cells (uses string as default type).
            
            Throws:
            InvalidOperationException (Excel is not initialized)
            ArgumentException (passed arguments are incorrect);  
            </summary>
            <param name="sheet">Sheet number</param>
            <param name="FirstRowHasHeaders">Specifies that first row contains column headers</param>
            <param name="n_col">Maximum number of columns to load (0 - automatic)</param>
            <param name="n_row">Maximum number of rows to load (0 - automatic)</param>
            <returns>DataTable object filled with sheet content</returns>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.GetActiveSheet">
            <summary>
            Gets the number of currently active sheet.
            Returns -1 if excel is not initialized.
            </summary>
            <returns>Sheet number</returns>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.SetActiveSheet(System.Int32)">
            <summary>
            Activates specified sheet in this control instance
            
            Throws:
            InvalidOperationException (Excel is not initialized);
            ArgumentException (index is incorrect);
            </summary>
            <param name="index">Sheet number</param>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.DeleteSheet(System.Int32)">
            <summary>
            Removes specified sheet from workbook. 
            Note: You can't remove all sheets. At least one sheet must be present in workbook all the time.
            
            Throws:
            InvalidOperationException (Excel is not initialized);
            ArgumentException (index is incorrect);
            </summary>
            <param name="index">Sheet number</param>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.AddSheet(System.String)">
            <summary>
            Adds new sheet into the workbook of this control instance
            
            Throws:
            InvalidOperationException (Excel is not initialized);
            </summary>
            <param name="name">Worksheet name (optional)</param>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.GetSheets">
            <summary>
            Gets names of all sheets in this control instance as a list of string objects.
            
            Throws:
            InvalidOperationException (Excel is not initialized);
            </summary>
            <returns>List of worksheet names</returns>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.SetSheetName(System.Int32,System.String)">
            <summary>
            Changes the name of specified sheet.
            
            Throws:
            InvalidOperationException (Excel is not initialized);
            ArgumentException (index is incorrect or name is not specified);
            </summary>
            <param name="sheet">Sheet number</param>
            <param name="name">Sheet name</param>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.GetSheetName(System.Int32)">
            <summary>
            Gets the name for the specified sheet
            </summary>
            <param name="sheet">Sheet number (1-based)</param>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.FindSheet(System.String)">
            <summary>
            Gets the index of sheet with specified name. Returns -1 if the sheet is not found.
            
            Throws:
            InvalidOperationException (Excel is not initialized);
            ArgumentException (name is not specified); 
            </summary>
            <param name="name">Sheet name</param>
            <returns>Sheet index or -1</returns>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.MoveSheet(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Inserts the worksheet before or after the target worksheet in the workbook
            
            Throws:
            InvalidOperationException (Excel is not initialized);
            ArgumentException (incorrect index); 
            </summary>
            <param name="curr_index">Number of sheet to move</param>
            <param name="new_index">Target sheet index</param>
            <param name="before">Specifies that sheet must be placed before the target sheet</param>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.SaveIntoFile(System.String)">
            <summary>
            Saves the content of the current workbook into a specified file.
            </summary>
            <param name="file">A path to the file to save the workbook</param>
            <exception cref="T:System.InvalidOperationException"> Excel is not initialized </exception>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.NewEmptyWorkbook">
            <summary>
            Closes the current workbook, and loads a new empty workbook into this control
            </summary>
            <exception cref="T:System.InvalidOperationException"> Excel is not initialized </exception>
            <exception cref="T:System.NotSupportedException"> Not supported in Excel 2016+ </exception>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.OpenFile(System.String)">
            <summary>
            Loads the contents of the specified workbook file into this control
            </summary>
            <param name="file">A path to the file</param>
            <exception cref="T:System.InvalidOperationException"> Excel is not initialized </exception>
            <exception cref="T:System.NotSupportedException"> Not supported in Excel 2016+ </exception>
            <exception cref="T:System.IO.FileNotFoundException"> File does not exist </exception>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.AddChart(System.Int32,System.String,System.String,ExtraControls.ChartType,System.String)">
            <summary>
            Adds chart based on the data of the specified sheet into the current workbook. 
            The chart is placed on the separate sheet.
            </summary>
            <param name="sheet">Number of the sheet (1-based) from which to use data for the chart</param>
            <param name="cell1">Address of upper-left cell of chart’s source data range</param>
            <param name="cell2">Address of lower-right cell of chart’s source data range</param>
            <param name="ct">Chart type (optional)</param>
            <param name="title">Chart title (optional)</param>
            <exception cref="T:System.InvalidOperationException"> Excel is not initialized </exception>
            <exception cref="T:System.NotSupportedException"> Not supported in Excel 2016+ </exception>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.AddEmbeddedChart(System.Int32,System.String,System.String,System.Double,System.Double,System.Double,System.Double,ExtraControls.ChartType,System.String)">
            <summary>
            Adds chart based on the data of the specified sheet. The chart is placed on the same sheet.
            </summary>
            <param name="sheet">Number of the sheet (1-based) from which to use data for the chart</param>
            <param name="cell1">Address of upper-left cell of chart’s source data range</param>
            <param name="cell2">Address of lower-right cell of chart’s source data range</param>
            <param name="x">X coordinate of the chart location</param>
            <param name="y">Y coordinate of the chart location</param>
            <param name="w">Width of the chart</param>
            <param name="h">Height of the chart</param>
            <param name="ct">Chart type (optional)</param>
            <param name="title">Chart title (optional)</param>
            <exception cref="T:System.InvalidOperationException"> Excel is not initialized </exception>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.System#IDisposable#Dispose">
            <summary>
            Frees resources accociated with this control instance
            </summary>
        </member>
        <member name="F:ExtraControls.AdvancedDataGrid.components">
            <summary> 
            Требуется переменная конструктора.
            </summary>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.Dispose(System.Boolean)">
            <summary> 
            Освободить все используемые ресурсы.
            </summary>
            <param name="disposing">истинно, если управляемый ресурс должен быть удален; иначе ложно.</param>
        </member>
        <member name="M:ExtraControls.AdvancedDataGrid.InitializeComponent">
            <summary> 
            Обязательный метод для поддержки конструктора - не изменяйте 
            содержимое данного метода при помощи редактора кода.
            </summary>
        </member>
        <member name="T:ExtraControls.ChartType">
            <summary>
            Represents Excel chart type
            </summary>
            <remarks>
            This enumeration is a copy of XlChartType (https://docs.microsoft.com/en-us/office/vba/api/excel.xlcharttype) 
            from Excel API, provided to enable the charting support in WinFormsExcel libary.
            </remarks>
        </member>
        <member name="F:ExtraControls.ChartType.xlXYScatter">
            <summary>
            Scatter
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlRadar">
            <summary>
            Radar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlDoughnut">
            <summary>
            Doughnut
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DPie">
            <summary>
            3D Pie
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DLine">
            <summary>
            3D Line
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DColumn">
            <summary>
            3D Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DArea">
            <summary>
            3D Area
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlArea">
            <summary>
            Area
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlLine">
            <summary>
            Line
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlPie">
            <summary>
            Pie
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlBubble">
            <summary>
            Bubble
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlColumnClustered">
            <summary>
            Clustered Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlColumnStacked">
            <summary>
            Stacked Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlColumnStacked100">
            <summary>
            100% Stacked Column.
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DColumnClustered">
            <summary>
            Clustered Cone Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DColumnStacked">
            <summary>
            Stacked Cone Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DColumnStacked100">
            <summary>
            100% Stacked Cone Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlBarClustered">
            <summary>
            Clustered Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlBarStacked">
            <summary>
            Stacked Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlBarStacked100">
            <summary>
            100% Stacked Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DBarClustered">
            <summary>
            3D Clustered Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DBarStacked">
            <summary>
            3D Stacked Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DBarStacked100">
            <summary>
            3D 100% Stacked Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlLineStacked">
            <summary>
            Stacked Line
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlLineStacked100">
            <summary>
            100% Stacked Line
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlLineMarkers">
            <summary>
            Line with Markers
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlLineMarkersStacked">
            <summary>
            Stacked Line with Markers
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlLineMarkersStacked100">
            <summary>
            100% Stacked Line with Markers
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlPieOfPie">
            <summary>
            Pie of Pie
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlPieExploded">
            <summary>
            Exploded Pie
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DPieExploded">
            <summary>
            Exploded 3D Pie
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlBarOfPie">
            <summary>
            Bar of Pie
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlXYScatterSmooth">
            <summary>
            Scatter with Smoothed Lines
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlXYScatterSmoothNoMarkers">
            <summary>
            Scatter with Smoothed Lines and No Data Markers
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlXYScatterLines">
            <summary>
            Scatter with Lines
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlXYScatterLinesNoMarkers">
            <summary>
            Scatter with Lines and No Data Markers
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlAreaStacked">
            <summary>
            Stacked Area
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlAreaStacked100">
            <summary>
            100% Stacked Area
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DAreaStacked">
            <summary>
            3D Stacked Area
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xl3DAreaStacked100">
            <summary>
            100% Stacked Area
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlDoughnutExploded">
            <summary>
            Exploded Doughnut
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlRadarMarkers">
            <summary>
            Radar with Data Markers
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlRadarFilled">
            <summary>
            Filled Radar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlSurface">
            <summary>
            3D Surface
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlSurfaceWireframe">
            <summary>
            3D Surface (wireframe)
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlSurfaceTopView">
            <summary>
            Surface (Top View)
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlSurfaceTopViewWireframe">
            <summary>
            Surface (Top View wireframe)
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlBubble3DEffect">
            <summary>
            Bubble with 3D effects
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlStockHLC">
            <summary>
            High-Low-Close
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlStockOHLC">
            <summary>
            Open-High-Low-Close
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlStockVHLC">
            <summary>
            Volume-High-Low-Close
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlStockVOHLC">
            <summary>
            Volume-Open-High-Low-Close
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlCylinderColClustered">
            <summary>
            Clustered Cone Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlCylinderColStacked">
            <summary>
            Stacked Cone Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlCylinderColStacked100">
            <summary>
            100% Stacked Cylinder Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlCylinderBarClustered">
            <summary>
            Clustered Cylinder Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlCylinderBarStacked">
            <summary>
            Stacked Cylinder Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlCylinderBarStacked100">
            <summary>
            100% Stacked Cylinder Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlCylinderCol">
            <summary>
            3D Cylinder Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlConeColClustered">
            <summary>
            Clustered Cone Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlConeColStacked">
            <summary>
            Stacked Cone Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlConeColStacked100">
            <summary>
            100% Stacked Cone Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlConeBarClustered">
            <summary>
            Clustered Cone Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlConeBarStacked">
            <summary>
            Stacked Cone Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlConeBarStacked100">
            <summary>
            100% Stacked Cone Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlConeCol">
            <summary>
            3D Cone Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlPyramidColClustered">
            <summary>
            Clustered Pyramid Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlPyramidColStacked">
            <summary>
            Stacked Pyramid Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlPyramidColStacked100">
            <summary>
            100% Stacked Pyramid Column
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlPyramidBarClustered">
            <summary>
            Clustered Pyramid Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlPyramidBarStacked">
            <summary>
            Stacked Pyramid Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlPyramidBarStacked100">
            <summary>
            100% Stacked Pyramid Bar
            </summary>
        </member>
        <member name="F:ExtraControls.ChartType.xlPyramidCol">
            <summary>
            3D Pyramid Column
            </summary>
        </member>
        <member name="T:ExtraControls.C_AdvancedDataGrid">
            <summary>
            Wrapper control for AdvancedDataGrid/S_AdvancedDataGrid controls. Switches between them at runtime, allowing 
            to use required control depending on Excel presence on target machine
            </summary>
        </member>
        <member name="F:ExtraControls.C_AdvancedDataGrid.basegrid">
            <summary>
            Specifies the underlying grid control used to actually display data
            </summary>
        </member>
        <member name="F:ExtraControls.C_AdvancedDataGrid.excel_on">
            <summary>
            Indicates that this control uses Excel mode (backed by AdvancedDataGrid)
            </summary>
        </member>
        <member name="F:ExtraControls.C_AdvancedDataGrid.initialized">
            <summary>
            Indicates that excel was loaded for this control instance
            </summary>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.ErrorMessage(System.String)">
            <summary>
            Displays error message within this control
            </summary>
            <param name="s">Error description</param>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.#ctor">
            <summary>
            Creates C_AdvancedDataGrid control in substitute mode
            </summary>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.#ctor(ExtraControls.GridMode)">
            <summary>
            Creates C_AdvancedDataGrid control in specified mode
            </summary>
        </member>
        <member name="P:ExtraControls.C_AdvancedDataGrid.Mode">
            <summary>
            Gets or sets the current grid mode. Setting this property will cause control to be initialized again.
            </summary>
        </member>
        <member name="P:ExtraControls.C_AdvancedDataGrid.BaseGrid">
            <summary>
            Returns the underlying grid, which type is determined by Mide property 
            </summary>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.Initialize(ExtraControls.GridMode)">
            <summary>
            Initializes this control in specified mode
            </summary>        
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.Destroy">
            <summary>
            Cleans up resources used by this control. The control will be in uninitialized state.
            </summary>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.Finalize">
            <summary>
            Destroys this control instance
            </summary>
        </member>
        <member name="P:ExtraControls.C_AdvancedDataGrid.DataSource">
            <inheritdoc/>
        </member>
        <member name="P:ExtraControls.C_AdvancedDataGrid.ActiveSheet">
            <inheritdoc/>
        </member>
        <member name="P:ExtraControls.C_AdvancedDataGrid.SheetsCount">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.SetCellContent(System.Int32,System.Int32,System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.GetCellContent(System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.SetSheetContent(System.Int32,System.Data.DataTable)">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.GetSheetContent(System.Int32,System.Boolean,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.GetActiveSheet">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.SetActiveSheet(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.DeleteSheet(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.AddSheet(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.GetSheets">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.SetSheetName(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.GetSheetName(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.FindSheet(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.NewEmptyWorkbook">
            <inheritdoc/>
        </member>
        <member name="F:ExtraControls.C_AdvancedDataGrid.components">
            <summary> 
            Требуется переменная конструктора.
            </summary>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.Dispose(System.Boolean)">
            <summary> 
            Освободить все используемые ресурсы.
            </summary>
            <param name="disposing">истинно, если управляемый ресурс должен быть удален; иначе ложно.</param>
        </member>
        <member name="M:ExtraControls.C_AdvancedDataGrid.InitializeComponent">
            <summary> 
            Обязательный метод для поддержки конструктора - не изменяйте 
            содержимое данного метода при помощи редактора кода.
            </summary>
        </member>
        <member name="T:ExtraControls.GridMode">
            <summary>
            Represents mode in which C_AdvancedDataGrid control operates
            </summary>
        </member>
        <member name="F:ExtraControls.GridMode.Undefined">
            <summary>
            Undefined (control is not initialized yet)
            </summary>
        </member>
        <member name="F:ExtraControls.GridMode.Auto">
            <summary>
            Choose mode automatically: Excel mode if possible, otherwise Substitute
            </summary>
        </member>
        <member name="F:ExtraControls.GridMode.Excel">
            <summary>
            Uses Excel implementation (AdvancedDataGrid)
            </summary>        
        </member>
        <member name="F:ExtraControls.GridMode.Substitute">
            <summary>
            Uses substituted implementation (S_AdvancedDataGrid)
            </summary>
        </member>
        <member name="T:ExtraControls.IDataGrid">
            <summary>
            Provides a set of properties and methods shared by DataGrid controls able to display 
            multiple data tables
            </summary>
        </member>
        <member name="P:ExtraControls.IDataGrid.DataSource">
            <summary>
            Gets or sets the content of currently active grid sheet via DataTable object
            </summary>
            <remarks>
            NOTE: Controls implementing IDataGrid are not guaranteed to support data binding. 
            The DataSource Property is only a convenient way to manipulate active sheet’s contents.
            </remarks>
        </member>
        <member name="P:ExtraControls.IDataGrid.ActiveSheet">
            <summary>
            Gets or sets current active sheet.
            </summary>
        </member>
        <member name="P:ExtraControls.IDataGrid.SheetsCount">
            <summary>
            Returns the amount of sheets in current workbook (read-only).
            </summary>
        </member>
        <member name="M:ExtraControls.IDataGrid.SetCellContent(System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>
            Sets contents of the cell specified by sheet, row and column numbers into an object 
            of any type
            </summary>
            <param name="sheet">Sheet number (1-based)</param>
            <param name="row">Row number</param>
            <param name="col">Column number</param>
            <param name="val">New cell value</param>
        </member>
        <member name="M:ExtraControls.IDataGrid.GetCellContent(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the content of the cell specified by sheet, row and column numbers.
            </summary>
            <param name="sheet">Sheet number (1-based)</param>
            <param name="row">Row number</param>
            <param name="col">Column number</param>
            <returns>
            Value of the specified cell, or null if arguments are incorrect
            </returns>
        </member>
        <member name="M:ExtraControls.IDataGrid.SetSheetContent(System.Int32,System.Data.DataTable)">
            <summary>
            Fills the specified sheet with a content of given DataTable object
            </summary>
            <param name="sheet">Sheet number (1-based)</param>
            <param name="t">DataTable to fill sheet's content</param>
        </member>
        <member name="M:ExtraControls.IDataGrid.GetSheetContent(System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Loads content of specified sheet as DataTable object.
            </summary>
            <param name="sheet">Sheet number</param>
            <param name="FirstRowHasHeaders">Specifies that first row contains column headers</param>
            <param name="n_col">Maximum number of columns to load (0 - automatic)</param>
            <param name="n_row">Maximum number of rows to load (0 - automatic)</param>
            <returns>DataTable object filled with sheet content</returns>
        </member>
        <member name="M:ExtraControls.IDataGrid.GetActiveSheet">
            <summary>
            Gets the number of currently active sheet. 
            </summary>
            <returns>Sheet number (1-based)</returns>
        </member>
        <member name="M:ExtraControls.IDataGrid.SetActiveSheet(System.Int32)">
            <summary>
            Activates specified sheet in this control instance
            </summary>
            <param name="index">Sheet number (1-based)</param>
        </member>
        <member name="M:ExtraControls.IDataGrid.DeleteSheet(System.Int32)">
            <summary>
            Removes the specified sheet
            </summary>
            <param name="index">Sheet number (1-based)</param>
        </member>
        <member name="M:ExtraControls.IDataGrid.AddSheet(System.String)">
            <summary>
            Adds new sheet into the workbook of this control instance
            </summary>
            <param name="name">Worksheet name (optional)</param>
        </member>
        <member name="M:ExtraControls.IDataGrid.GetSheets">
            <summary>
            Gets names of all sheets in this control instance as a list of strings.
            </summary>
            <returns>List of worksheet names</returns>
        </member>
        <member name="M:ExtraControls.IDataGrid.SetSheetName(System.Int32,System.String)">
            <summary>
            Changes the name of specified sheet.
            </summary>
            <param name="sheet">Sheet number (1-based)</param>
            <param name="name">Sheet name</param>
        </member>
        <member name="M:ExtraControls.IDataGrid.GetSheetName(System.Int32)">
            <summary>
            Gets the name for the specified sheet
            </summary>
            <param name="sheet">Sheet number (1-based)</param>
        </member>
        <member name="M:ExtraControls.IDataGrid.FindSheet(System.String)">
            <summary>
            Gets the index of sheet with specified name.
            </summary>
            <param name="name">Sheet name</param>
            <returns>Sheet index, or -1 if the sheet is not found</returns>
        </member>
        <member name="M:ExtraControls.IDataGrid.NewEmptyWorkbook">
            <summary>
            Closes the current workbook, and loads a new empty workbook into this control
            </summary>
        </member>
        <member name="T:ExtraControls.SubstituteGrid.S_AdvancedDataGrid">
            <summary>
            Provides an implementation of IDataGrid interface via standard Windows Forms control, allowing to display and edit one or
            more tables of data. Serves as a Excel-free substitute for AdvancedDataGrid control.
            </summary>
        </member>
        <member name="F:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.sheets">
            <summary>
            The collection of sheets displayed in this control
            </summary>
        </member>
        <member name="F:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.active_sheet">
            <summary>
            Reference to the sheet currently displayed in the grid
            </summary>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.button_Click(System.Object,System.EventArgs)">
            <summary>
            Event fired when user clicks a button associated with certain sheet
            </summary>        
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.NewSheet(System.String)">
            <summary>
            Creates the new sheet and adds it to this data grid control
            </summary>
            <param name="name">Optional sheet name</param>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.ActivateSheet(ExtraControls.SubstituteGrid.S_DataSheet)">
            <summary>
            Displays specified sheet in the grid
            </summary>
            <param name="sh">Reference to sheet object</param>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.UpdateSheetName(System.Int32,System.String)">
            <summary>
            Chenges the name of specified sheet, adjusting UI
            </summary>
            <param name="i">internal sheet index</param>
            <param name="name">new name</param>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.#ctor">
            <summary>
            Creates new S_AdvancedDataGrid control and fills it with default empty content
            </summary>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.SetCellContent(System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>
            Sets contents of the cell specified by sheet, row and column numbers into an object of any type
            </summary>
            <param name="sheet">Sheet number</param>
            <param name="row">Row number</param>
            <param name="col">Column number</param>
            <param name="val">New cell value</param>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.GetCellContent(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the content of the cell specified by sheet, row and column numbers.
            
            </summary>
            <param name="sheet">Sheet number</param>
            <param name="row">Row number</param>
            <param name="col">Column number</param>
            <returns>Value of the specified cell</returns>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.SetSheetContent(System.Int32,System.Data.DataTable)">
            <summary>
            Fills the specified sheet with a content of given DataTable object
                     
            </summary>
            <param name="sheet">Sheet number</param>
            <param name="t">DataTable to fill sheet's content</param>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.GetSheetContent(System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Loads content of specified sheet as DataTable object.        
                   
            </summary>
            <param name="sheet">Sheet number</param>
            <param name="FirstRowHasHeaders">Specifies that first row contains column headers (unused)</param>
            <param name="n_col">Maximum number of columns to load (unused)</param>
            <param name="n_row">Maximum number of rows to load (unused)</param>
            <returns>DataTable object filled with sheet content</returns>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.GetActiveSheet">
            <summary>
            Gets the number of currently active sheet.
            Returns -1 if excel is not initialized.
            </summary>
            <returns>Sheet number</returns>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.SetActiveSheet(System.Int32)">
            <summary>
            Activates specified sheet in this control instance
                   
            </summary>
            <param name="index">Sheet number</param>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.DeleteSheet(System.Int32)">
            <summary>
            Removes specified sheet from workbook. 
            Note: You can't remove all sheets. At least one sheet must be present in workbook all the time.
                    
            </summary>
            <param name="index">Sheet number</param>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.AddSheet(System.String)">
            <summary>
            Adds new sheet into the workbook of this control instance
                    
            </summary>
            <param name="name">Worksheet name (optional)</param>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.GetSheets">
            <summary>
            Gets names of all sheets in this control instance as a list of string objects.
                   
            </summary>
            <returns>List of worksheet names</returns>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.SetSheetName(System.Int32,System.String)">
            <summary>
            Changes the name of specified sheet.
                    
            </summary>
            <param name="sheet">Sheet number</param>
            <param name="name">Sheet ne name</param>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.GetSheetName(System.Int32)">
            <summary>
            Gets the index of sheet with specified name. Returns -1 if the sheet is not found.
            </summary>
            <param name="sheet">Sheet name</param>
            <returns>Sheet index or -1</returns>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.FindSheet(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.NewEmptyWorkbook">
            <inheritdoc/>
        </member>
        <member name="P:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.DataSource">
            <inheritdoc/>
        </member>
        <member name="P:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.ActiveSheet">
            <summary>
            Gets or sets current active sheet.                
            </summary>
        </member>
        <member name="P:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.SheetsCount">
            <inheritdoc/>
        </member>
        <member name="P:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the user can edit the contents of this control
            </summary>
        </member>
        <member name="F:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.components">
            <summary> 
            Требуется переменная конструктора.
            </summary>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.Dispose(System.Boolean)">
            <summary> 
            Освободить все используемые ресурсы.
            </summary>
            <param name="disposing">истинно, если управляемый ресурс должен быть удален; иначе ложно.</param>
        </member>
        <member name="M:ExtraControls.SubstituteGrid.S_AdvancedDataGrid.InitializeComponent">
            <summary> 
            Обязательный метод для поддержки конструктора - не изменяйте 
            содержимое данного метода при помощи редактора кода.
            </summary>
        </member>
        <member name="T:ExtraControls.SubstituteGrid.S_DataSheet">
            <summary>
            Represents S_AdvancedDataGrid's data sheet. Infrastructure.
            </summary>
        </member>
        <member name="F:ExtraControls.SubstituteGrid.S_DataSheet.name">
            <summary>
            Sheet name, displayed in associated button
            </summary>
        </member>
        <member name="F:ExtraControls.SubstituteGrid.S_DataSheet.title_button">
            <summary>
            Button used to activated this sheet
            </summary>
        </member>
        <member name="F:ExtraControls.SubstituteGrid.S_DataSheet.data">
            <summary>
            actual data object this sheet is bound to
            </summary>
        </member>
        <member name="T:ExtraControls.XlSheet">
            <summary>
            Represents data sheet in Excel Workbook
            </summary>
        </member>
        <member name="P:ExtraControls.XlSheet.Index">
            <summary>
            Index of the sheet in the workbook (starts from 1)
            </summary>
        </member>
        <member name="P:ExtraControls.XlSheet.Name">
            <summary>
            Name of the sheet (displayed in tab)
            </summary>
        </member>
        <member name="P:ExtraControls.XlSheet.IsChart">
            <summary>
            Specifies that this sheet is a chart. 
            Unlike with worksheets, you can’t manipulate the contents of chart sheets.
            </summary>
        </member>
        <member name="M:WinFormsExcel.Internal.NativeMethods.SetParent(System.IntPtr,System.IntPtr)">
            <summary>
            Changes hWnd's owner to NewParent window 
            </summary>
            <param name="hWnd">handle of the window to change owner</param>
            <param name="NewParent">handle of the new owner window</param>
            <returns></returns>
        </member>
        <member name="M:WinFormsExcel.Internal.NativeMethods.SetWindowLong(System.IntPtr,System.Int32,System.UInt32)">
            <summary>
            Sets window property defined by dword's offset in window structure
            </summary>
            <param name="hWnd">handle of the window to change property</param>
            <param name="nIndex">property dword's offset in window structure</param>
            <param name="dwNewLong">new dword value of the property</param>        
        </member>
        <member name="M:WinFormsExcel.Internal.NativeMethods.GetWindowLong(System.IntPtr,System.Int32)">
            <summary>
            Gets the value of the window property defined by dword's offset in window structure
            </summary>
            <param name="hWnd">handle of the window to get property from</param>
            <param name="nIndex">property dword's offset in window structure</param>        
        </member>
        <member name="M:WinFormsExcel.Internal.NativeMethods.MoveWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adjusts window position and size based on coordinates, width and height values
            </summary>
            <param name="hWnd">handle of the window to adjust values</param>
            <param name="x">X coordinate of window on the screen</param>
            <param name="y">Y coordinate of window on the screen</param>
            <param name="w">window's width</param>
            <param name="h">window's height</param>
            <param name="repaint">repaint window after adjusting</param>
            <returns></returns>
        </member>
        <member name="F:WinFormsExcel.Internal.NativeMethods.WS_CHILD">
            <summary>
            Window style: child window, has no titlebar or sizebox
            </summary>
        </member>
        <member name="F:WinFormsExcel.Internal.NativeMethods.WS_POPUP">
            <summary>
            Window style: popup window
            </summary>
        </member>
        <member name="F:WinFormsExcel.Internal.NativeMethods.WS_BORDER">
            <summary>
            Window style: has border
            </summary>
        </member>
        <member name="F:WinFormsExcel.Internal.NativeMethods.WS_CAPTION">
            <summary>
            Window style:  WS_BORDER | WS_DLGFRAME
            </summary>
        </member>
        <member name="F:WinFormsExcel.Internal.NativeMethods.WS_THICKFRAME">
            <summary>
            Window style:  frame allows to resize this window
            </summary>
        </member>
        <member name="F:WinFormsExcel.Internal.NativeMethods.WS_SIZEBOX">
            <summary>
            Window style:  frame allows to resize this window
            </summary>
        </member>
        <member name="F:WinFormsExcel.Internal.NativeMethods.GWL_STYLE">
            <summary>
            The offset of style dword in window structure (passed to GetWindowLong or SetWindowLong)
            </summary>
        </member>
    </members>
</doc>
